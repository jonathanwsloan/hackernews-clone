{"ast":null,"code":"import _objectSpread from \"/Users/jonathansloan/OneDrive - Vanderbilt/Kairos/hackernews/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jonathansloan/OneDrive - Vanderbilt/Kairos/hackernews/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_HPP = '100';\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\nconst largeColumn = {\n  width: '40%'\n};\nconst midColumn = {\n  width: '30%'\n};\nconst smallColumn = {\n  width: '10%'\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY\n    };\n    this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  needsToSearchTopStories(searchTerm) {\n    return !this.state.results[searchTerm];\n  }\n\n  setSearchTopStories(result) {\n    const hits = result.hits,\n          page = result.page;\n    const _this$state = this.state,\n          searchKey = _this$state.searchKey,\n          results = _this$state.results;\n    const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n    const updatedHits = [...oldHits, ...hits];\n    this.setState({\n      results: _objectSpread({}, results, {\n        [searchKey]: {\n          hits: updatedHits,\n          page\n        }\n      })\n    });\n  }\n\n  onSearchSubmit(event) {\n    const searchTerm = this.state.searchTerm;\n    this.setState({\n      searchKey: searchTerm\n    });\n\n    if (this.needsToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopStories(searchTerm);\n    }\n\n    event.preventDefault();\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    fetch(\"\".concat(PATH_BASE).concat(PATH_SEARCH, \"?\").concat(PARAM_SEARCH).concat(searchTerm, \"&\").concat(PARAM_PAGE).concat(page, \"&\").concat(PARAM_HPP).concat(DEFAULT_HPP)).then(response => response.json()).then(result => this.setSearchTopStories(result)).catch(error => error);\n  }\n\n  componentDidMount() {\n    const searchTerm = this.state.searchTerm;\n    this.setState({\n      searchKey: searchTerm\n    });\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  onDismiss(id) {\n    const _this$state2 = this.state,\n          searchKey = _this$state2.searchKey,\n          results = _this$state2.results;\n    const _results$searchKey = results[searchKey],\n          hits = _results$searchKey.hits,\n          page = _results$searchKey.page;\n\n    const isNotId = item => item.objectID !== id;\n\n    const updatedHits = hits.filter(isNotId);\n    this.setState({\n      results: _objectSpread({}, results, {\n        [searchKey]: {\n          hits: updatedHits,\n          page\n        }\n      })\n    });\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          searchTerm = _this$state3.searchTerm,\n          results = _this$state3.results,\n          searchKey = _this$state3.searchKey;\n    const page = results && results[searchKey] && results[searchKey].page || 0;\n    const list = results && results[searchKey] && results[searchKey].hits || [];\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"interactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Search, {\n      value: searchTerm,\n      onChange: this.onSearchChange,\n      onSubmit: this.onSearchSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Table, {\n      list: list,\n      onDismiss: this.onDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"interactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.fetchSearchTopStories(searchKey, page + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"More\")));\n  }\n\n}\n\nconst Search = ({\n  value,\n  onChange,\n  onSubmit,\n  children\n}) => React.createElement(\"form\", {\n  onSubmit: onSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146\n  },\n  __self: this\n}, children, \" \", React.createElement(\"input\", {\n  type: \"text\",\n  value: value,\n  onChange: onChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}, children));\n\nconst Table = ({\n  list,\n  onDismiss\n}) => React.createElement(\"div\", {\n  className: \"table\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}, list.map(item => React.createElement(\"div\", {\n  key: item.objectID,\n  className: \"table-row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  style: largeColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: item.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 162\n  },\n  __self: this\n}, item.title)), React.createElement(\"span\", {\n  style: midColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 164\n  },\n  __self: this\n}, item.author), React.createElement(\"span\", {\n  style: smallColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 167\n  },\n  __self: this\n}, item.num_comments), React.createElement(\"span\", {\n  style: smallColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 170\n  },\n  __self: this\n}, item.points), React.createElement(\"span\", {\n  style: smallColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 173\n  },\n  __self: this\n}, React.createElement(Button, {\n  onClick: () => onDismiss(item.objectID),\n  className: \"button-inline\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174\n  },\n  __self: this\n}, \"Dismiss\")))));\n\nconst Button = ({\n  onClick,\n  className = '',\n  children\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  className: className,\n  type: \"button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 191\n  },\n  __self: this\n}, children);\n\nexport default App;","map":{"version":3,"sources":["/Users/jonathansloan/OneDrive - Vanderbilt/Kairos/hackernews/src/App.js"],"names":["React","Component","DEFAULT_QUERY","DEFAULT_HPP","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_PAGE","PARAM_HPP","largeColumn","width","midColumn","smallColumn","App","constructor","props","state","results","searchKey","searchTerm","needsToSearchTopStories","bind","setSearchTopStories","fetchSearchTopStories","onSearchChange","onSearchSubmit","onDismiss","result","hits","page","oldHits","updatedHits","setState","event","preventDefault","fetch","then","response","json","catch","error","componentDidMount","target","value","id","isNotId","item","objectID","filter","render","list","Search","onChange","onSubmit","children","Table","map","url","title","author","num_comments","points","Button","onClick","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_HPP = '100';\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\n\nconst largeColumn = {\n  width: '40%',\n};\n\nconst midColumn = {\n  width: '30%',\n};\n\nconst smallColumn = {\n  width: '10%',\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n    };\n\n    this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  needsToSearchTopStories(searchTerm) {\n    return !this.state.results[searchTerm];\n  }\n\n  setSearchTopStories(result) {\n    const { hits, page } = result;\n    const { searchKey, results } = this.state;\n    const oldHits = results && results[searchKey]\n      ? results[searchKey].hits\n      : [];\n    const updatedHits = [\n      ...oldHits,\n      ...hits\n    ];\n    this.setState({\n      results: {\n        ...results,\n        [searchKey]: { hits: updatedHits, page }\n      }\n    });\n  }\n\n  onSearchSubmit(event) {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    if (this.needsToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopStories(searchTerm);\n    }\n    event.preventDefault();\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n      .then(response => response.json())\n      .then(result => this.setSearchTopStories(result))\n      .catch(error => error);\n  }\n\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onDismiss(id) {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n    this.setState({\n      results: {\n        ...results,\n        [searchKey]: { hits: updatedHits, page }\n      }\n    });\n  }\n\n  render() {\n    const {\n      searchTerm,\n      results,\n      searchKey\n    } = this.state;\n    const page = (\n      results &&\n      results[searchKey] &&\n      results[searchKey].page\n    ) || 0;\n    const list = (\n      results &&\n      results[searchKey] &&\n      results[searchKey].hits\n    ) || [];\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search\n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n          >\n            Search\n          </Search>\n        </div>\n        <Table\n          list={list}\n          onDismiss={this.onDismiss}\n        />\n        <div className=\"interactions\">\n          <Button onClick={() => this.fetchSearchTopStories(searchKey, page + 1)}>\n            More\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Search = ({ value, onChange, onSubmit, children }) =>\n  <form onSubmit={onSubmit}>\n    {children} <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n    <button type=\"submit\">\n      {children}\n    </button>\n  </form>\n\nconst Table = ({ list, onDismiss }) =>\n  <div className=\"table\">\n    {list.map(item =>\n      <div key={item.objectID} className=\"table-row\">\n        <span style={largeColumn}>\n          <a href={item.url}>{item.title}</a>\n        </span>\n        <span style={midColumn}>\n          {item.author}\n        </span>\n        <span style={smallColumn}>\n          {item.num_comments}\n        </span>\n        <span style={smallColumn}>\n          {item.points}\n        </span>\n        <span style={smallColumn}>\n          <Button\n            onClick={() => onDismiss(item.objectID)}\n            className=\"button-inline\"\n          >\n            Dismiss\n          </Button>\n        </span>\n      </div>\n    )}\n  </div>\n\n\nconst Button = ({\n  onClick,\n  className = '',\n  children,\n}) =>\n  <button\n    onClick={onClick}\n    className={className}\n    type=\"button\"\n  >\n    {children}\n  </button>\n\nexport default App;"]},"metadata":{},"sourceType":"module"}