{"map":"{\"version\":3,\"sources\":[\"/Users/jonathansloan/OneDrive - Vanderbilt/Kairos/hackernews/src/App.js\",\"/Users/jonathansloan/OneDrive - Vanderbilt/Kairos/hackernews/src/serviceWorker.js\",\"/Users/jonathansloan/OneDrive - Vanderbilt/Kairos/hackernews/src/index.js\"],\"names\":[\"DEFAULT_QUERY\",\"largeColumn\",\"width\",\"midColumn\",\"smallColumn\",\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"results\",\"searchKey\",\"searchTerm\",\"error\",\"needsToSearchTopStories\",\"bind\",\"assertThisInitialized\",\"setSearchTopStories\",\"fetchSearchTopStories\",\"onSearchChange\",\"onSearchSubmit\",\"onDismiss\",\"result\",\"hits\",\"page\",\"_this$state\",\"oldHits\",\"updatedHits\",\"concat\",\"toConsumableArray\",\"setState\",\"objectSpread\",\"defineProperty\",\"event\",\"preventDefault\",\"_this2\",\"arguments\",\"length\",\"undefined\",\"axios\",\"then\",\"data\",\"catch\",\"target\",\"value\",\"id\",\"_this$state2\",\"_results$searchKey\",\"filter\",\"item\",\"objectID\",\"_this3\",\"_this$state3\",\"list\",\"react_default\",\"a\",\"createElement\",\"className\",\"App_Search\",\"onChange\",\"onSubmit\",\"App_Table\",\"App_Button\",\"onClick\",\"Component\",\"Search\",\"_ref\",\"children\",\"type\",\"Table\",\"_ref2\",\"map\",\"key\",\"style\",\"href\",\"url\",\"title\",\"author\",\"num_comments\",\"points\",\"Button\",\"_ref3\",\"_ref3$className\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport axios from 'axios'\\nimport './App.css';\\n\\nconst DEFAULT_QUERY = 'redux';\\nconst DEFAULT_HPP = '100';\\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\\nconst PATH_SEARCH = '/search';\\nconst PARAM_SEARCH = 'query=';\\nconst PARAM_PAGE = 'page=';\\nconst PARAM_HPP = 'hitsPerPage=';\\n\\nconst largeColumn = {\\n  width: '40%',\\n};\\n\\nconst midColumn = {\\n  width: '30%',\\n};\\n\\nconst smallColumn = {\\n  width: '10%',\\n};\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      results: null,\\n      searchKey: '',\\n      searchTerm: DEFAULT_QUERY,\\n      error: null,\\n    };\\n\\n    this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\\n    this.onSearchChange = this.onSearchChange.bind(this);\\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\\n    this.onDismiss = this.onDismiss.bind(this);\\n  }\\n\\n  needsToSearchTopStories(searchTerm) {\\n    return !this.state.results[searchTerm];\\n  }\\n\\n  setSearchTopStories(result) {\\n    const { hits, page } = result;\\n    const { searchKey, results } = this.state;\\n    const oldHits = results && results[searchKey]\\n      ? results[searchKey].hits\\n      : [];\\n    const updatedHits = [\\n      ...oldHits,\\n      ...hits\\n    ];\\n    this.setState({\\n      results: {\\n        ...results,\\n        [searchKey]: { hits: updatedHits, page }\\n      }\\n    });\\n  }\\n\\n  onSearchSubmit(event) {\\n    const { searchTerm } = this.state;\\n    this.setState({ searchKey: searchTerm });\\n    if (this.needsToSearchTopStories(searchTerm)) {\\n      this.fetchSearchTopStories(searchTerm);\\n    }\\n    event.preventDefault();\\n  }\\n\\n  fetchSearchTopStories(searchTerm, page = 0) {\\n    axios(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\\n      .then(result => this.setSearchTopStories(result.data))\\n      .then(result => this.setSearchTopStories(result))\\n      .catch(error => this.setState({ error }));\\n  }\\n\\n\\n  componentDidMount() {\\n    const { searchTerm } = this.state;\\n    this.setState({ searchKey: searchTerm });\\n    this.fetchSearchTopStories(searchTerm);\\n  }\\n\\n  onSearchChange(event) {\\n    this.setState({ searchTerm: event.target.value });\\n  }\\n\\n  onDismiss(id) {\\n    const { searchKey, results } = this.state;\\n    const { hits, page } = results[searchKey];\\n    const isNotId = item => item.objectID !== id;\\n    const updatedHits = hits.filter(isNotId);\\n    this.setState({\\n      results: {\\n        ...results,\\n        [searchKey]: { hits: updatedHits, page }\\n      }\\n    });\\n  }\\n\\n  render() {\\n    const {\\n      searchTerm,\\n      results,\\n      searchKey,\\n      error\\n    } = this.state;\\n    const page = (\\n      results &&\\n      results[searchKey] &&\\n      results[searchKey].page\\n    ) || 0;\\n    const list = (\\n      results &&\\n      results[searchKey] &&\\n      results[searchKey].hits\\n    ) || [];\\n    return (\\n      <div className=\\\"page\\\">\\n        <div className=\\\"interactions\\\">\\n          <Search\\n            value={searchTerm}\\n            onChange={this.onSearchChange}\\n            onSubmit={this.onSearchSubmit}\\n          >\\n            Search\\n          </Search>\\n        </div>\\n        {error\\n          ? <div className=\\\"interactions\\\">\\n            <p>Something went wrong.</p>\\n          </div>\\n          : <Table\\n            list={list}\\n            onDismiss={this.onDismiss}\\n          />}\\n        <Table\\n          list={list}\\n          onDismiss={this.onDismiss}\\n        />\\n        <div className=\\\"interactions\\\">\\n          <Button onClick={() => this.fetchSearchTopStories(searchKey, page + 1)}>\\n            More\\n          </Button>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nconst Search = ({ value, onChange, onSubmit, children }) =>\\n  <form onSubmit={onSubmit}>\\n    {children} <input\\n      type=\\\"text\\\"\\n      value={value}\\n      onChange={onChange}\\n    />\\n    <button type=\\\"submit\\\">\\n      {children}\\n    </button>\\n  </form>\\n\\nconst Table = ({ list, onDismiss }) =>\\n  <div className=\\\"table\\\">\\n    {list.map(item =>\\n      <div key={item.objectID} className=\\\"table-row\\\">\\n        <span style={largeColumn}>\\n          <a href={item.url}>{item.title}</a>\\n        </span>\\n        <span style={midColumn}>\\n          {item.author}\\n        </span>\\n        <span style={smallColumn}>\\n          {item.num_comments}\\n        </span>\\n        <span style={smallColumn}>\\n          {item.points}\\n        </span>\\n        <span style={smallColumn}>\\n          <Button\\n            onClick={() => onDismiss(item.objectID)}\\n            className=\\\"button-inline\\\"\\n          >\\n            Dismiss\\n          </Button>\\n        </span>\\n      </div>\\n    )}\\n  </div>\\n\\n\\nconst Button = ({\\n  onClick,\\n  className = '',\\n  children,\\n}) =>\\n  <button\\n    onClick={onClick}\\n    className={className}\\n    type=\\\"button\\\"\\n  >\\n    {children}\\n  </button>\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(\\n    <App />,\\n    document.getElementById('root'));\\n\\nif (module.hot) {\\n    module.hot.accept();\\n}\\n\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{20:function(e,t,a){e.exports=a(47)},26:function(e,t,a){},46:function(e,t,a){},47:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),s=a(13),c=a.n(s),i=(a(26),a(3)),o=a(5),h=a(6),l=a(14),u=a(15),m=a(18),S=a(16),p=a(2),b=a(19),v=a(17),d=a.n(v),f=(a(46),\"redux\"),y={width:\"40%\"},g={width:\"30%\"},E={width:\"10%\"},T=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(m.a)(this,Object(S.a)(t).call(this,e))).state={results:null,searchKey:\"\",searchTerm:f,error:null},a.needsToSearchTopStories=a.needsToSearchTopStories.bind(Object(p.a)(a)),a.setSearchTopStories=a.setSearchTopStories.bind(Object(p.a)(a)),a.fetchSearchTopStories=a.fetchSearchTopStories.bind(Object(p.a)(a)),a.onSearchChange=a.onSearchChange.bind(Object(p.a)(a)),a.onSearchSubmit=a.onSearchSubmit.bind(Object(p.a)(a)),a.onDismiss=a.onDismiss.bind(Object(p.a)(a)),a}return Object(b.a)(t,e),Object(u.a)(t,[{key:\"needsToSearchTopStories\",value:function(e){return!this.state.results[e]}},{key:\"setSearchTopStories\",value:function(e){var t=e.hits,a=e.page,n=this.state,r=n.searchKey,s=n.results,c=s&&s[r]?s[r].hits:[],l=[].concat(Object(h.a)(c),Object(h.a)(t));this.setState({results:Object(o.a)({},s,Object(i.a)({},r,{hits:l,page:a}))})}},{key:\"onSearchSubmit\",value:function(e){var t=this.state.searchTerm;this.setState({searchKey:t}),this.needsToSearchTopStories(t)&&this.fetchSearchTopStories(t),e.preventDefault()}},{key:\"fetchSearchTopStories\",value:function(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;d()(\"\".concat(\"https://hn.algolia.com/api/v1\").concat(\"/search\",\"?\").concat(\"query=\").concat(e,\"&\").concat(\"page=\").concat(a,\"&\").concat(\"hitsPerPage=\").concat(\"100\")).then(function(e){return t.setSearchTopStories(e.data)}).then(function(e){return t.setSearchTopStories(e)}).catch(function(e){return t.setState({error:e})})}},{key:\"componentDidMount\",value:function(){var e=this.state.searchTerm;this.setState({searchKey:e}),this.fetchSearchTopStories(e)}},{key:\"onSearchChange\",value:function(e){this.setState({searchTerm:e.target.value})}},{key:\"onDismiss\",value:function(e){var t=this.state,a=t.searchKey,n=t.results,r=n[a],s=r.hits,c=r.page,h=s.filter(function(t){return t.objectID!==e});this.setState({results:Object(o.a)({},n,Object(i.a)({},a,{hits:h,page:c}))})}},{key:\"render\",value:function(){var e=this,t=this.state,a=t.searchTerm,n=t.results,s=t.searchKey,c=t.error,i=n&&n[s]&&n[s].page||0,o=n&&n[s]&&n[s].hits||[];return r.a.createElement(\"div\",{className:\"page\"},r.a.createElement(\"div\",{className:\"interactions\"},r.a.createElement(j,{value:a,onChange:this.onSearchChange,onSubmit:this.onSearchSubmit},\"Search\")),c?r.a.createElement(\"div\",{className:\"interactions\"},r.a.createElement(\"p\",null,\"Something went wrong.\")):r.a.createElement(w,{list:o,onDismiss:this.onDismiss}),r.a.createElement(w,{list:o,onDismiss:this.onDismiss}),r.a.createElement(\"div\",{className:\"interactions\"},r.a.createElement(k,{onClick:function(){return e.fetchSearchTopStories(s,i+1)}},\"More\")))}}]),t}(n.Component),j=function(e){var t=e.value,a=e.onChange,n=e.onSubmit,s=e.children;return r.a.createElement(\"form\",{onSubmit:n},s,\" \",r.a.createElement(\"input\",{type:\"text\",value:t,onChange:a}),r.a.createElement(\"button\",{type:\"submit\"},s))},w=function(e){var t=e.list,a=e.onDismiss;return r.a.createElement(\"div\",{className:\"table\"},t.map(function(e){return r.a.createElement(\"div\",{key:e.objectID,className:\"table-row\"},r.a.createElement(\"span\",{style:y},r.a.createElement(\"a\",{href:e.url},e.title)),r.a.createElement(\"span\",{style:g},e.author),r.a.createElement(\"span\",{style:E},e.num_comments),r.a.createElement(\"span\",{style:E},e.points),r.a.createElement(\"span\",{style:E},r.a.createElement(k,{onClick:function(){return a(e.objectID)},className:\"button-inline\"},\"Dismiss\")))}))},k=function(e){var t=e.onClick,a=e.className,n=void 0===a?\"\":a,s=e.children;return r.a.createElement(\"button\",{onClick:t,className:n,type:\"button\"},s)},O=T;Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(O,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[20,1,2]]]);","extractedComments":[]}